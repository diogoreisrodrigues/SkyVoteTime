@page "/createcomp"
@using SkyVoteTime.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h1 class="title" style="text-align:center; margin-top:100px">CreateCompetition</h1>



<div class="container rounded-3 fundo justify-content-center" style="width:55%; margin-top:70px;">

    <div class="container justify-content-center" style="width:80%">

        <form>
            <div class="texto" style="margin-top:50px;">
                <label for="name">Name: </label>
                <input type="name" class="form-control input-lg" @bind="@competition.Name" id="exampleName" aria-describedby="NameHelp" placeholder="Enter the name of the Competition">
            </div>
            <br>
            <div class="texto">
                <label for="description">Description: </label>
                <input type="description" @bind="@competition.Description" class="form-control input-lg" id="exampleDescription" placeholder="Enter the description for the Competition">
            </div>

        </form>

        <br>
        <br>

        <div class="dropdown">
            <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Competition Type
            </button>
            <div class="dropdown-menu col-xs-12" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="#">Filme</a>
                <a class="dropdown-item" href="#">Ator</a>
                <a class="dropdown-item" href="#">Diretor</a>
            </div>
        </div>



        <br />
        <br />
        <br />
        
        <p class="texto">Category</p>
        <br />

        <div class=" container check justify-content-center">
            <div class="col-sm-1"></div>
            <div class="col-sm-2">
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Action</label>
                    </label>
                </div>
                <br />       
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Drama</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Romance</label>
                    </label>
                </div>
                <br />
                <br />
                <br />
            </div>
            <div class="col-sm-2">
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Documentary</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Suspense</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Horror</label>
                    </label>
                </div>
                <br />
                <br />
                <br />
            </div>
            <div class="col-sm-3">
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Science fiction</label>
                    </label>
                </div>
                <br />
                <div class="form-check" >
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Comedy</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input" value="">
                        <label for="cat" class="cat"> Adventure</label>
                    </label>
                </div>
                <br />
                <br />
                <br />
            </div
            
        </div>

        <div class="form-check form-switch switch">
            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
            <label class="cat2" for="flexSwitchCheckDefault">Public</label>
        </div>
        <br>
        <br />
        <br />

        <div class="col-sm-3"></div>
        <div class="col-sm-2">
            <button type="button" @onclick="@Cancel" value="Cancel" class="btn btn-light btn-lg">Cancel</button>
        </div>
        <div class="col-sm-2"></div>
        <div class="col-sm-1">
            <button type="button" @onclick="@Save" value="Submit" class="btn btn-warning btn-lg">Submit</button>
        </div>
        <br>
        <br />
        <br />

    </div>
    <br>
    <br />
</div>
<br>
<br />
<br />

@code {
Competition competition = new Competition();
protected override async Task OnInitializedAsync()
{
}
protected async Task Save()
{
    var response = await Http.PostAsJsonAsync("api/Competition", @competition);
    Competition competitionResponse = await response.Content.ReadFromJsonAsync<Competition>();
        if (competitionResponse?.Id > 0)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Saved Successfully!");
            NavigationManager.NavigateTo("");
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("");
    }
}