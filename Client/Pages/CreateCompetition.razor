@page "/createcomp"
@using SkyVoteTime.Client.API;
@using SkyVoteTime.Shared
@using System.Text.Json;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

@inject TheMovieDBApi movieApi;


<style>

    h1, h2, h3, h4, h5, p {
      font-weight: 400;
    }

    .page {
        background-color: #FFF;
        background-image: url("../Assets/BackofficeBackground.png");
    }

    a {
      text-decoration: none;
      color: inherit;
    }

    a:hover {
      color: #6ABCEA;
    }

    .containerMovie {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
      max-width: 100%;
      margin-top: 10vh;
      margin-left: auto;
      margin-right: auto;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
    }

    .movie-card {
      background: #ffffff;
      box-shadow: 0px 6px 18px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 30%;
      margin: 2em;
      border-radius: 10px;
      display: inline-block;
    }

    .movie-header {
      padding: 0;
      margin: 0;
      height: 367px;
      width: 100%;
      display: block;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      background-size: cover;
      background-position: 100% 100%;
    }


    .header-icon-container {
      position: relative;
    }

    .header-icon {
      width: 100%;
      height: 367px;
      line-height: 367px;
      text-align: center;
      vertical-align: middle;
      margin: 0 auto;
      color: #ffffff;
      font-size: 54px;
      text-shadow: 0px 0px 20px #6abcea, 0px 5px 20px #6ABCEA;
      opacity: .85;
    }

    .header-icon:hover {
      background: rgba(0, 0, 0, 0.15);
      font-size: 74px;
      text-shadow: 0px 0px 20px #6abcea, 0px 5px 30px #6ABCEA;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      opacity: 1;
    }

    .movie-card:hover {
      -webkit-transform: scale(1.03);
              transform: scale(1.03);
      box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.08);
    }

    .movie-content {
      padding: 18px 18px 24px 18px;
      margin: 0;
    }

    .movie-content-header, .movie-info {
      display: table;
      width: 100%;
    }

    .movie-title {
      font-size: 24px;
      margin: 0;
      display: table-cell;
    }

    .imax-logo {
      width: 50px;
      height: 15px;
      background: url("https://6a25bbd04bd33b8a843e-9626a8b6c7858057941524bfdad5f5b0.ssl.cf5.rackcdn.com/media_kit/3e27ede823afbf139c57f1c78a03c870.jpg") no-repeat;
      background-size: contain;
      display: table-cell;
      float: right;
      position: relative;
      margin-top: 5px;
    }

    .movie-info {
      margin-top: 1em;
    }

    .info-section {
      display: table-cell;
      text-transform: uppercase;
      text-align: center;
    }

    .info-section:first-of-type {
      text-align: left;
    }

    .info-section:last-of-type {
      text-align: right;
    }

    .info-section label {
      display: block;
      color: rgba(0, 0, 0, 0.5);
      margin-bottom: .5em;
      font-size: 9px;
    }

    .info-section span {
      font-weight: 700;
      font-size: 11px;
    }


      .movie-card {
        width: 95%;
        max-width: 30%;
        margin: 1em;
        display: block;
      }

      .container {
        padding: 0;
        
      }

      .checkbox-wrapper-24{
          margin-top: 10px;
          text-align: center;
      }

   
}
</style>


<div class="container-lg rounded-3 fundo justify-content-center" style=" margin-top:70px; padding: 50px;">

    <h1 class="title" style="text-align:center; margin-top:100px">Create Competition</h1>

    <div class="container justify-content-center" style="width:80%">

        <form>
            <div class="texto" style="margin-top:50px;">
                <label for="name">Name: </label>
                <input type="name" class="form-control input-lg" @bind="@competition.Name" id="exampleName" aria-describedby="NameHelp" placeholder="Enter the name of the Competition">
            </div>
            <br>
            <div class="texto">
                <label for="description">Description: </label>
                <input type="description" @bind="@competition.Description" class="form-control input-lg" id="exampleDescription" placeholder="Enter the description for the Competition">
            </div>

        </form>

        <br>

		<div class="texto">
		    <label for="competitionState">Competition State</label>
		    <select class="form-control" style="height: auto;" @bind="@competition.State">
			    <option value=@CompetitionState.Private  >Private</option>
			    <option value=@CompetitionState.Public   >Public</option>
		    </select>
	    </div>
    
		<br/>

		<div class="texto">
		    <label>Competition Type</label>
		    <select class="form-control" style="height: auto;" @bind="@competition.Type">
                <option value="Movies" class="optionDropDown">Movies</option>
                <option value="Acting" class="optionDropDown">Actors</option>
                <option value="TVShow" class="optionDropDown">TV Show</option>
		    </select>
	    </div>



		<br />
        <br />
        
        
        @if(competition.Type == "Movies" || competition.Type == "TVShow"){

        <p class="texto">Category</p>
        <br />

        <div class="check row" style="margin-left: 5px;">

            <div class="col-sm-3">
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Action", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Action</label>
                    </label>
                </div>
                <br />       
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Drama", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Drama</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Romance", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Romance</label>
                    </label>
                </div>
                <br />
                <br />
                <br />
            </div>
            <div class="col-sm-3">
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Documentary", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Documentary</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Suspense", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Suspense</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Horror", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Horror</label>
                    </label>
                </div>
                <br />
                <br />
                <br />
            </div>
            <div class="col-sm-3">
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Science fiction", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Science fiction</label>
                    </label>
                </div>
                <br />
                <div class="form-check" >
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Comedy", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Comedy</label>
                    </label>
                </div>
                <br />
                <div class="form-check">
                    <label class="form-check-label">
                        <input type="checkbox" @onchange="@(e => OnCategoryChecked("Adventure", e))" class="form-check-input" value="">
                        <label for="cat" class="cat"> Adventure</label>
                    </label>
                </div>
                <br />
                <br />
                <br />
            </div>
	        <div class="col-sm-3">
		        <div class="form-check">
			        <label class="form-check-label">
                            <input type="checkbox" @onchange="@(e => OnCategoryChecked("Thriller", e))" class="form-check-input" value="">
                            <label for="cat" class="cat"> Thriller</label>
			        </label>
		        </div>
		        <br />
		        <div class="form-check" >
			        <label class="form-check-label">
                            <input type="checkbox" @onchange="@(e => OnCategoryChecked("Mystery", e))" class="form-check-input" value="">
                            <label for="cat" class="cat"> Mystery</label>
			        </label>
		        </div>
		        <br />
		        <div class="form-check">
			        <label class="form-check-label">
                            <input type="checkbox" @onchange="@(e => OnCategoryChecked("Fantasy", e))" class="form-check-input" value="">
                            <label for="cat" class="cat"> Fantasy</label>
			        </label>
		        </div>
		        <br />
		        <br />
		        <br />
	        </div>

        </div>
        }

        <br>
        
        
    
	    @if (competition.Type != "")
	    {
		    <!--Search Movie-->
		    <div class="form-group row">
			    <div class="col-xl-10">
				    <input class="form-control" type="text" @bind-value="@search" @bind-value:event="oninput" @onkeyup="KeyHandlerNominee" placeholder="Search the Competitor"/>
			    </div>
			    <div class="col-xs-2">
				    <input class="form-control" id="searchButton" type="submit" @onclick="GetPosters" value="Go"/>
			    </div>
		    </div>


		    <div class="containerMovie">

			    @if (movieList != null)
			    {
				    @foreach (Movie movie in movieList.results)
				    {
					    movie.Id = 0;

					    <div class="movie-card">
						    <div class="movie-header">
							    <img src="https://image.tmdb.org/t/p/w342/@movie.poster_path" class="movie-header"/>
						    </div><!--movie-header-->

						    <div class="movie-content" style="height:200px">
							    <div class="movie-content-header">
								    <a href="#">
									    <h3 class="movie-title">@movie.title</h3>
								    </a>
							    </div>
							    <div class="movie-info">

								    <label>Overview:</label> <br>
                                    <div style="max-height: 50px;overflow: overlay;font-size: 11px ">
									    <b></b> @movie.overview
								    </div>

                                    


							    </div>
						    </div><!--movie-content-->
                            <div style="padding-bottom:10px">
                                <button style="border-radius:10px; margin-left: 80px;" class="checkbox-wrapper-24" @onclick="@(e => GetMovie(movie))">

                                    <label for="check-24">
                                        <span><!-- This span is needed to create the "checkbox" element --></span>Add as Nominee!
                                    </label>
                                </button>
                            </div>
					    </div>
					    <!--movie-card-->
				    }
			    }
                else if (tvList != null)
                {
                    @foreach (Movie tvshow in tvList.results)
                    {
                        tvshow.Id = 0;
                        tvshow.title = tvshow.name;

                        <div class="movie-card">
                            <div class="movie-header">
                                <img src="https://image.tmdb.org/t/p/w342/@tvshow.poster_path" class="movie-header" />
                            </div><!--movie-header-->

                            <div class="movie-content" style="height:200px">
                                <div class="movie-content-header">
                                    <a href="#">
                                        <h3 class="movie-title">@tvshow.name</h3>
                                    </a>
                                </div>
                                <div class="movie-info">

                                    <label>Overview:</label> <br>
                                    <div style="max-height: 50px;overflow: overlay;font-size: 11px ">
                                        <b></b> @tvshow.overview
                                    </div>
                                </div>
                            </div><!--movie-content-->
                            <div style="padding-bottom:10px">
                                <button style="border-radius:10px; margin-left: 80px;" class="checkbox-wrapper-24" @onclick="@(e => GetMovie(@tvshow))">

                                    <label for="check-24">
                                        <span><!-- This span is needed to create the "checkbox" element --></span>Add as Nominee!
                                    </label>
                                </button>
                            </div>
                        </div>
                        <!--movie-card-->
                    }
                }
                else if (personList != null)
                {
	                @foreach (var person in personList)
	                {
		                if (person.known_for_department == competition.Type && person.profile_path != null)
		                {
			                person.Id = 0;

			                <div class="movie-card">
				                <div class="movie-header">
					                <img src="https://image.tmdb.org/t/p/w342/@person.profile_path" class="movie-header"/>
				                </div><!--movie-header-->

				                <div class="movie-content">
					                <div class="movie-content-header">
						                <a href="#">
							                <h3 class="movie-title">@person.name</h3>
						                </a>
					                </div
				                </div>
                                <div style="padding-bottom:10px">
                                    <button style="border-radius:10px; margin-left: 80px;" class="checkbox-wrapper-24"  @onclick="@(e => GetPerson(@person))">

                                        <label for="check-24">
                                            <span><!-- This span is needed to create the "checkbox" element --></span>Add as Nominee!
                                        </label>
                                    </button>
                                </div>
			                </div>
		                }
	                }
                }


		    </div>
		    <!--container-->

	    }
	    <br />
	    <br />
	    
	    <div class="row">
		    <div class="col-6">
			    <button type="button" @onclick="@Cancel" value="Cancel" class="btn btn-light btn-lg">Cancel</button>

		    </div>
		    <div class="col-6" style="text-align: right;">
			    <button type="button" @onclick="@Save" value="Submit" class="btn btn-lg text-light" style="background-color: #D4BE74">Submit</button>
		    </div>

	    </div>

    
        <br>
        <br />
        <br />

    </div>
    <br>
    <br />
</div>
<br>
<br />
<br />


@code {
    public Competition competition = new Competition
    {
        Movies = new List<Movie>(),
        Description = "",
        CategoriesJson = "",
        Name = "",
        Id = 0,
        Type = "",
        Persons = new List<Person>(),
        savedEmailsJson = ""
    };

    private String selectedType;

    private String compType;

    private bool estaPub;

    private List<string> selectedCategories = new List<string>();
    private List<string> selectedMovies = new List<string>();

    private string search { get; set; }
    private MovieList? movieList;

    private List<Person>? personList = new List<Person>();

    private MovieList? tvList;



    //== Movie Search ==//
    private async Task GetPosters()
    {
        if (competition.Type == "Movies")
        {
            movieList = await movieApi.searchMovieDetails(search);
            personList = null;
        }
        else if(competition.Type == "TVShow")
        {
            tvList = await movieApi.searchTVDetails(search);
            personList = null;
        }
        else
        {
            personList = await movieApi.searchPersonDetails(search);
            movieList = null;
        }

    } // MovieSearch()




    private async Task GetMovie(Movie movie)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this nominee?");
        if (confirmed)
        {
            try
            {
                if (!competition.Movies.Contains(movie))
                {
                    competition.Movies.Add(movie);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message); 
            }
        }



    } // GetMovie()

    private async Task GetPerson(Person person)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this nominee?");
        if (confirmed)
        {
            try
            {
                competition.Persons.Add(person); // GetMovie()
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message); 
            }
        }

    } 

    private void OnCategoryChecked(string categoryName, ChangeEventArgs e)
    {   
        var isChecked = (bool)e.Value;

        if (isChecked)
        {
            selectedCategories.Add(categoryName);
        }
        else
        {
            selectedCategories.Remove(categoryName);
        }
    }



    private async Task KeyHandlerNominee(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await GetPosters();
        }
    }

    /*private async Task KeyHandlerAtor(KeyboardEventArgs e)
        {
    if (e.Key == "Enter")
    {
    await GetPostersAtor();
    }
    }*/

    /*private async Task KeyHandlerDiretor(KeyboardEventArgs e)
        {
        if (e.Key == "Enter")
            {
            await GetPostersDiretor();
    }
    }*/

    private void DecideOnImageUrl()
	{
		if (competition.Type == "Movies" || competition.Type == "TVShow")
		{
            if(selectedCategories[0] == "Action") competition.ImageUrl = "Assets/action.png";
            else if(selectedCategories[0] == "Adventure") competition.ImageUrl = "Assets/adventure.png";
			else if(selectedCategories[0] == "Comedy") competition.ImageUrl = "Assets/comedy.png";
			else if(selectedCategories[0] == "Documentary") competition.ImageUrl = "Assets/documentary.png";
			else if(selectedCategories[0] == "Drama") competition.ImageUrl = "Assets/drama.png";
			else if(selectedCategories[0] == "Fantasy") competition.ImageUrl = "Assets/fantasy.png";
			else if(selectedCategories[0] == "Horror") competition.ImageUrl = "Assets/horror.png";
			else if(selectedCategories[0] == "Mystery") competition.ImageUrl = "Assets/mystery.png";
			else if(selectedCategories[0] == "Romance") competition.ImageUrl = "Assets/romance.png";
			else if(selectedCategories[0] == "Science Fiction") competition.ImageUrl = "Assets/scienceFiction.png";
			else if(selectedCategories[0] == "Thriller") competition.ImageUrl = "Assets/thriller.png";
			else competition.ImageUrl = "Assets/other.png";
			
		}
        else
		{
			competition.ImageUrl = "Assets/bestActor.png";
		}
	}



    protected override async Task OnInitializedAsync()
    {
    }
    protected async Task Save()
    {

        DecideOnImageUrl();
        competition.CategoriesJson = JsonSerializer.Serialize(selectedCategories);
        Console.WriteLine(competition.CategoriesJson);

	    var competitionconsole = JsonSerializer.Serialize(competition.Movies);
        Console.WriteLine(competitionconsole);

        var response = await Http.PostAsJsonAsync("api/Competition", competition);
        Console.WriteLine(await response.Content.ReadAsStringAsync());

        if (response.IsSuccessStatusCode)
        {
            Competition competitionResponse = await response.Content.ReadFromJsonAsync<Competition>();

            if (competitionResponse != null && competitionResponse.Id > 0)
            {
                await JsRuntime.InvokeVoidAsync("alert", "Saved Successfully!");
                NavigationManager.NavigateTo("backoffice");
            }
            else
            {
                // Handle invalid response or deserialization error
                Console.WriteLine("Invalid competition response or deserialization error.");
            }
        }
        else
        {
            // Handle HTTP request error
            Console.WriteLine("HTTP request error: " + response.StatusCode);
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("backoffice");
    }


}