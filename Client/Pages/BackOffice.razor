@page "/backoffice"
@using System.Text.Json;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime


<div class="container-lg my-5" style="background-color: #FFF; padding: 20px; border-radius: 20px;">
    <div class="row">
        <div class="col-10">
            <h1 style="margin-bottom: 25px; text-transform: uppercase; font-family: Inter; font-style: normal; font-size: 24px;">BackOffice - Competitions</h1>
        </div>
        <div class="col-2" >
            <button type="button" class="btn btn-lg btn-warning" style= "margin: 0; position: absolute; top: 50%; -ms-transform: translateY(-50%); transform: translateY(-50%);color: black;">Create Competition</button>
        </div> 
        
    </div>
    

    <div>
        <table class="table">
          <thead class="thead-dark">
            <tr>
              <th scope="col">ID</th>
              <th scope="col">Name</th>
              <th scope="col">Description</th>
              <th scope="col">Categories</th>
              <th scope="col">Nominees</th>
              <th scope="col">Status</th>
              <th scope="col"></th>
              <th scope="col"></th>
            </tr>
          </thead>
          <tbody>
            @foreach (var p in competitionList)
            {
                <tr>
                    <th style="vertical-align: middle" scope="row">@p.Id</th>
                    <td style="vertical-align: middle">@p.Name</td>
                    <td style="vertical-align: middle">@p.Description</td>
                    @{
                        List<String> categories = JsonSerializer.Deserialize<List<String>>(p.CategoriesJson);
                    }
                    <td style="vertical-align: middle">
                        @foreach (var c in categories)
                        {
                            <span>@c</span>
                            @if (c != categories.Last())
                            {
                                <span>, </span>
                            }
                        }
                    </td>
                    <td style="vertical-align: middle">FALTA ISTO</td>
                    <td style="vertical-align: middle">FALTA ISTO</td>
                    <td><a class="btn btn-primary" href="/editcompetition/@p.Id">Edit</a></td>
                    <td><button class="btn btn-danger" @onclick="() => Delete(p.Id)">Delete</button></td>
                </tr>
            }
          </tbody>
        </table>
    </div>
</div>
@code {
    public int Id;

    List<Competition> competitionList = new List<Competition>();
    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("api/competition");
        response.EnsureSuccessStatusCode();
        competitionList = await response.Content.ReadFromJsonAsync<List<Competition>>();
    }

    protected async Task Delete(int Id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this competition?");
        if (confirmed)
        {
            var response = await Http.DeleteAsync("api/Competition/" + Id);
            bool deleteResponse = await response.Content.ReadFromJsonAsync<bool>();
            if (deleteResponse)
            {
                await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
                NavigationManager.NavigateTo("");
            }
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("personlist");
    }

}
