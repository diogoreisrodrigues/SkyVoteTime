@page "/nom/{Id}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@using System.Text.Json;
@using SkyVoteTime.Client.API;
@inject TheMovieDBApi movieApi

<PageTitle>Nominees</PageTitle>

<div class="Nominees">
    <div class="px-5 mx-5 my-5">
        <h1 class="TitleNominees">@competition.Name</h1>
    </div>

    <br />


    @if (competition.Movies != null)
    {

        @foreach (Movie movie in competition.Movies)
        {
            <div class="container" style="background: rgba(0,0,0,0.7); border-radius: 20px;">
                <div class="row">
                    <div class="col-sm-3">
                                <img style="display: flex; align-items: center; padding: 15px; perspective: 100px;" src="https://image.tmdb.org/t/p/w342/@movie.poster_path" alt="" />
                    </div>
                    <div class="col-sm-9" style="color:white">
                        <div>
                            <div class="nomTitle">@movie.title</div>
                            <div style="font-size: 135%">
                                <b>Directors:</b> Daniel KwanDaniel and Daniel Scheinert
                            </div>
                            <br />
                            <div style="font-size: 135%">
                                <b>Actors:</b> Michelle Yeoh, Stephanie Hsu and Jamie Lee Curtis
                            </div>
                            <br />
                            <div style="font-size: 135%">
                                <b>Synopsis:</b> @movie.overview
                            </div>
                            <br />
                            <br />
                            <span class="badge">Action</span>
                            <span class="badge">Adventure</span>
                            <span class="badge">Comedy</span>

                            <div class="col-md-12 text-right">
                                                <a type="button"  @onclick="() => Update(movie)" class="btn btn-warning customButton"style="color:black; font-weight:bold" data-toggle="modal" data-target="#form">Vote here!</a>
                            </div>

                            <br />
                            <br />
                        </div>
                    </div>
                </div>
            </div>

            <br />
            <br />
        }

    }
    
    


</div>

@code{

    [Parameter]
    public string Id { get; set; }

    public Competition? competition;

    

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(Id);

        competition = await Http.GetFromJsonAsync<Competition>("api/competition/" + Id);



        Console.WriteLine(competition.ToString());

    }

    private async Task Update(Movie movie)
    {

        var vote = new Vote
            {
                Id = 0
            };

        movie.Votes ??= new List<Vote>();


        
        
        movie.Votes.Add(vote);

        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to Vote for this nominee?");
        if (confirmed)
        {
            try
            {
                var response = await Http.PutAsJsonAsync("api/Movie/" + movie.Id, movie);

                if (response.IsSuccessStatusCode)
                {
                    await JsRuntime.InvokeVoidAsync("alert", "Vote Submited!");
                    NavigationManager.NavigateTo("");
                }
                else
                {
                    // Handle HTTP request error
                    Console.WriteLine("HTTP request error: " + response.StatusCode);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }

    }



    void Cancel() => NavigationManager.NavigateTo("competitions");


}
